image: gcc:13

stages: [build, test, docs, deploy]

variables:
  DOXYFILE: Doxyfile          # change to docs/Doxyfile if that's your path
  PDF_NAME: documentation.pdf

build:
  stage: build
  script:
    - mkdir -p build
    - g++ -std=c++17 -O2 -o build/app main.cpp
  artifacts:
    paths: [build/app]

test:
  stage: test
  needs: [build]
  script:
    - ./build/app

# ---- NEW: Docs jobs ----
docs_html:
  stage: docs
  image: debian:bookworm
  before_script:
    - apt-get update
    - apt-get install -y doxygen graphviz
    - echo "PWD=$(pwd)"; ls -la
    - test -f "$DOXYFILE" || { echo "ERROR: $DOXYFILE not found"; exit 1; }
  script:
    - doxygen "$DOXYFILE"      # generates html/ (and latex/ if enabled)
    - test -d html || { echo "ERROR: html/ not produced"; exit 1; }
  artifacts:
    paths:
      - html/
    expire_in: 1 week

docs_pdf:
  stage: docs
  image: debian:bookworm
  before_script:
    - apt-get update
    - apt-get install -y doxygen graphviz make \
        texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
    - test -f "$DOXYFILE" || { echo "ERROR: $DOXYFILE not found"; exit 1; }
  script:
    - doxygen "$DOXYFILE"      # ensures latex/ exists
    - test -d latex || { echo "ERROR: latex/ not produced"; exit 1; }
    - cd latex
    - make                     # builds refman.pdf
    - cp refman.pdf ../"$PDF_NAME"
  artifacts:
    paths:
      - "$PDF_NAME"
    expire_in: 1 week

# Deploy (unchanged logic)
deploy_staging:
  stage: deploy
  needs: ["test"]
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
  script:
    - echo "Deploying to staging..."
    - mkdir -p deployed
    - cp build/app deployed/
  artifacts:
    paths:
      - deployed/
    expire_in: 1 week

deploy_production:
  stage: deploy
  needs: ["test"]
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  when: manual
  script:
    - echo "Deploying to production..."
    - mkdir -p deployed
    - cp build/app deployed/
    - echo "Code copied to production server"
  artifacts:
    paths:
      - deployed/
    expire_in: 1 week
